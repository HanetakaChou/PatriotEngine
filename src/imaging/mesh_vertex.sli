//
// Copyright (C) YuqiaoZhang(HanetakaChou)
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as published
// by the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.
//

#ifndef _IMAGING_MESH_VERTEX_SLI_
#define _IMAGING_MESH_VERTEX_SLI_ 1

#if defined(__STDC__) || defined(__cplusplus)

#include <stddef.h>
#include <stdint.h>
#include <pt_math.h>

// In Vulkan
// The whole pipeline will be affected if the "VertexInputState" is changed and thus we keep the "vertex format" fixed.
// But the "index format" can be changed on-the-fly by "vkCmdBindIndexBuffer".

// vertex bindings/attributes
// location = 0 binding = 0 position VK_FORMAT_R16_SFLOAT
// location = 1 binding = 0 position VK_FORMAT_R16_SFLOAT
// location = 2 binding = 0 position VK_FORMAT_R16_SFLOAT
struct mesh_vertex_position
{
    uint16_t position_x;
    uint16_t position_y;
    uint16_t position_z;
};

// vertex bindings/attributes
// location = 3 binding = 1 qtangentxyz_xyz_reflection_w VK_FORMAT_A2B10G10R10_UNORM_PACK32
// location = 4 binding = 1 qtangentw_x_uv_yz VK_FORMAT_A2B10G10R10_UNORM_PACK32
struct mesh_vertex_varying
{
    uint32_t qtangentxyz_xyz_reflection_w;
    uint32_t qtangentw_x_uv_yz;
};

#elif defined(GL_SPIRV) || defined(VULKAN)

layout(location = 0) in highp float in_position_x;
layout(location = 1) in highp float in_position_y;
layout(location = 2) in highp float in_position_z;
layout(location = 3) in highp vec4 in_qtangentxyz_xyz_reflection_w;
layout(location = 4) in highp vec4 in_qtangentw_x_uv_yz;

#elif defined(HLSL_VERSION) || defined(__HLSL_VERSION)

// TODO: HLSL

#else
#error Unknown Compiler
#endif

#endif
